
package Car;

import ConexionBD.Conexion;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;

import java.util.List;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vacio
 */
public class Propietarios extends javax.swing.JPanel {
    
    Conexion conectar = new Conexion();
    Principal princ;
    Connection conect;
    DefaultTableModel modelo;
    ResultSetMetaData metaData;
    Statement st;
    ResultSet rs;
    
    /** Creates new form Propietarios */
    public Propietarios(Principal principal) {
        initComponents();
        this.princ = principal;
        /* consultar(); */
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        TblPropietarios = new javax.swing.JTable();

        TblPropietarios = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int col){
                for(int i = 0; i<TblPropietarios.getRowCount(); i++){
                    if(row==i){
                        return false;
                    }
                }
                return true;
            }
        };
        TblPropietarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TblPropietarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblPropietariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TblPropietarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }//GEN-END:initComponents

    private void TblPropietariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblPropietariosMouseClicked
     int row = TblPropietarios.getSelectedRow();
     int clienteID = (Integer)TblPropietarios.getValueAt(row, 0);
        if(evt.getClickCount() == 2){
            this.princ.ShowPanel(2,clienteID);
            this.princ.jLAddAutos.setVisible(true);
        }
    }//GEN-LAST:event_TblPropietariosMouseClicked
    
    public void consultar(){
        String sql = "select * from propietario";
        try{
            conect = conectar.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            
            Object[] propietario = new Object[6];
            metaData = rs.getMetaData();
            modelo = (DefaultTableModel)TblPropietarios.getModel();
            
            int cols = metaData.getColumnCount();
            String[] colName = new String[cols];
            for(int i=0; i<cols; i++){
                colName[i] = metaData.getColumnName(i+1);
                modelo.setColumnIdentifiers(colName);
            }
            while(rs.next()){
                propietario[0] = rs.getInt(1);
                propietario[1] = rs.getString(2);
                propietario[2] = rs.getString(3);
                propietario[3] = rs.getString(4);
                propietario[4] = rs.getString(5);
                propietario[5] = rs.getString(6);
                
                modelo.addRow(propietario);
            }
            /*TblPropietarios.setModel(modelo); */
             st.close();
            /*conect.close();
            conectar.desconectar();*/
        }catch(Exception e){
            System.out.println("Ocurrio un error: "+e);
        }
    }
    
    public void buscarPropietario(String filter, String valorBusqueda){
        String queryBusqueda = "Select * From propietario Where "+ filter +" like "+ "'%"+valorBusqueda+"%'";
        JTable tblBusquedaProp = new JTable(); 
        try{
            conect = conectar.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(queryBusqueda);
            
            Object[] propietario = new Object[6];
            metaData = rs.getMetaData();
            modelo = (DefaultTableModel)tblBusquedaProp.getModel();
            
            int cols = metaData.getColumnCount();
            String[] colName = new String[cols];
            for(int i=0; i<cols; i++){
                colName[i] = metaData.getColumnName(i+1);
                modelo.setColumnIdentifiers(colName);
            }
            while(rs.next()){
                propietario[0] = rs.getInt(1);
                propietario[1] = rs.getString(2);
                propietario[2] = rs.getString(3);
                propietario[3] = rs.getString(4);
                propietario[4] = rs.getString(5);
                propietario[5] = rs.getString(6);
                
                modelo.addRow(propietario);
            }
            TblPropietarios.setModel(modelo); 
            /* st.close(); */
            /* conect.close();
            conectar.desconectar(); */
        }catch(Exception e){
            System.out.println("Ocurrio un error: "+e);
        }
    }
    
    public void buscarPropietarioID(List<Integer> idCliente){
        DefaultTableModel modeloID;
        ResultSetMetaData metaDataID;
        String filtroOR = "";
        /* JTable TblPropietarios = new javax.swing.JTable(); */
        if(idCliente.size()>1){
            for(int ids : idCliente){
                filtroOR = " OR idCliente ="+ids;
            }
        } 
        String queryBusquedaProp = "Select * From propietario Where IdCliente = "+idCliente.get(0)+filtroOR;
        JTable tblBusquedaProp = new JTable(); 
        try{
            conect = conectar.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(queryBusquedaProp);
            
            Object[] propietario = new Object[6];
            metaDataID = rs.getMetaData();
            modeloID = (DefaultTableModel)tblBusquedaProp.getModel();
            
            int cols = metaDataID.getColumnCount();
            String[] colName = new String[cols];
            for(int i=0; i<cols; i++){
                colName[i] = metaDataID.getColumnName(i+1);
                modeloID.setColumnIdentifiers(colName);
            }
            while(rs.next()){
                propietario[0] = rs.getInt(1);
                propietario[1] = rs.getString(2);
                propietario[2] = rs.getString(3);
                propietario[3] = rs.getString(4);
                propietario[4] = rs.getString(5);
                propietario[5] = rs.getString(6);
                
                modeloID.addRow(propietario);
            }
            TblPropietarios.setModel(modeloID); 
            /* st.close(); */
            /* conect.close();
            conectar.desconectar(); */
        }catch(Exception e){
            System.out.println("Ocurrio un error: "+e);
        }
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable TblPropietarios;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
